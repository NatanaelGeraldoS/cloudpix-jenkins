version: "3.8"

services:
    backend:
        image: ${BACKEND_IMAGE}
        container_name: cloudpix-backend-production
        ports:
            - "8001:3001"
        environment:
            - NODE_ENV=production
            - PORT=3001
            - DATABASE_URL=${DATABASE_URL:-postgresql://user:password@db:5432/cloudpix_production}
        depends_on:
            - db
        networks:
            - cloudpix-production
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
            interval: 30s
            timeout: 10s
            retries: 5
        deploy:
            resources:
                limits:
                    memory: 512M
                reservations:
                    memory: 256M

    frontend:
        image: ${FRONTEND_IMAGE}
        container_name: cloudpix-frontend-production
        ports:
            - "8000:80"
        depends_on:
            - backend
        networks:
            - cloudpix-production
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    memory: 256M
                reservations:
                    memory: 128M

    db:
        image: postgres:15-alpine
        container_name: cloudpix-db-production
        environment:
            - POSTGRES_USER=user
            - POSTGRES_PASSWORD=password
            - POSTGRES_DB=cloudpix_production
        volumes:
            - postgres_production_data:/var/lib/postgresql/data
        networks:
            - cloudpix-production
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    memory: 1G
                reservations:
                    memory: 512M

volumes:
    postgres_production_data:

networks:
    cloudpix-production:
        driver: bridge
